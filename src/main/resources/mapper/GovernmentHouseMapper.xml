<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tt.dao.GovernmentHouseMapper" >
  <resultMap id="BaseResultMap" type="com.tt.entity.GovernmentHouse" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="building" property="building" jdbcType="VARCHAR" />
    <result column="building_id" property="buildingId" jdbcType="VARCHAR" />
    <result column="house_name" property="houseName" jdbcType="VARCHAR" />
    <result column="house_id" property="houseId" jdbcType="VARCHAR" />
    <result column="real_floor" property="realFloor" jdbcType="VARCHAR" />
    <result column="nominal_floor" property="nominalFloor" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="batch_id" property="batchId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, building, building_id, house_name, house_id, real_floor, nominal_floor, status, 
    batch_id, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tt.entity.GovernmentHouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from government_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from government_house
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from government_house
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tt.entity.GovernmentHouseExample" >
    delete from government_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tt.entity.GovernmentHouse" >
    insert into government_house (id, building, building_id, 
      house_name, house_id, real_floor, 
      nominal_floor, status, batch_id, 
      create_time)
    values (#{id,jdbcType=VARCHAR}, #{building,jdbcType=VARCHAR}, #{buildingId,jdbcType=VARCHAR}, 
      #{houseName,jdbcType=VARCHAR}, #{houseId,jdbcType=VARCHAR}, #{realFloor,jdbcType=VARCHAR}, 
      #{nominalFloor,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{batchId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tt.entity.GovernmentHouse" >
    insert into government_house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="building != null" >
        building,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="houseName != null" >
        house_name,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="realFloor != null" >
        real_floor,
      </if>
      <if test="nominalFloor != null" >
        nominal_floor,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="batchId != null" >
        batch_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="building != null" >
        #{building,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="houseName != null" >
        #{houseName,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="realFloor != null" >
        #{realFloor,jdbcType=VARCHAR},
      </if>
      <if test="nominalFloor != null" >
        #{nominalFloor,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="batchId != null" >
        #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tt.entity.GovernmentHouseExample" resultType="java.lang.Integer" >
    select count(*) from government_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update government_house
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.building != null" >
        building = #{record.building,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=VARCHAR},
      </if>
      <if test="record.houseName != null" >
        house_name = #{record.houseName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=VARCHAR},
      </if>
      <if test="record.realFloor != null" >
        real_floor = #{record.realFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.nominalFloor != null" >
        nominal_floor = #{record.nominalFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.batchId != null" >
        batch_id = #{record.batchId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update government_house
    set id = #{record.id,jdbcType=VARCHAR},
      building = #{record.building,jdbcType=VARCHAR},
      building_id = #{record.buildingId,jdbcType=VARCHAR},
      house_name = #{record.houseName,jdbcType=VARCHAR},
      house_id = #{record.houseId,jdbcType=VARCHAR},
      real_floor = #{record.realFloor,jdbcType=VARCHAR},
      nominal_floor = #{record.nominalFloor,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      batch_id = #{record.batchId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tt.entity.GovernmentHouse" >
    update government_house
    <set >
      <if test="building != null" >
        building = #{building,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="houseName != null" >
        house_name = #{houseName,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="realFloor != null" >
        real_floor = #{realFloor,jdbcType=VARCHAR},
      </if>
      <if test="nominalFloor != null" >
        nominal_floor = #{nominalFloor,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="batchId != null" >
        batch_id = #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tt.entity.GovernmentHouse" >
    update government_house
    set building = #{building,jdbcType=VARCHAR},
      building_id = #{buildingId,jdbcType=VARCHAR},
      house_name = #{houseName,jdbcType=VARCHAR},
      house_id = #{houseId,jdbcType=VARCHAR},
      real_floor = #{realFloor,jdbcType=VARCHAR},
      nominal_floor = #{nominalFloor,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      batch_id = #{batchId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>